#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

#Metrics related configurations
management:
  endpoint:
    health:
      show-details: "always"
      show-components: "always"
    metrics.enabled: "true"
    prometheus.enabled: "true"
  endpoints.web.exposure.include: "*"
  info.env.enabled: "true"
  metrics:
    tags.application: ${spring.application.name}
    web.server.request.autotime.enabled: "true"
  health.db.enabled: ${datasource.enabled}
  prometheus.metrics.export.enabled: "true"

odata-response:
  max-record-count: 10000

spring:
  autoconfigure.exclude: ${POSTGRES_CONFIG}
  application.name: Query Service
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    url: ${DATABASE_URL}
    hikari:
      max-lifetime: 300000
  flyway:
    enabled: "false"
    user: postgres
    password: superpwd
    url: jdbc:postgresql://localhost:5433/dynamic_schema
    baseline-on-migrate: "true"
  jpa.hibernate.ddl-auto: none
  jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_CONSUMER_BOOTSTRAP_SERVER}
      group-id: kpi_group
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      spring:
        deserializer:
          key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
          value.delegate.class: com.ericsson.oss.air.queryservice.config.ExposureConfigKafkaJsonDeserializer

schema-listener.topics: pm-stats-calculator-json-exposure-control
datasource.enabled: "false"
kafka.enabled: "false"

retry:
  postgres:
    backoffPeriod: ${POSTGRES_RETRY_BACKOFF_PERIOD}
    maxAttempts: ${POSTGRES_MAX_RETRY_ATTEMPTS}

endpoints.health.sensitive: "false"
info:
  app:
    name: '@name@'
    description: PM Stats Query Service
    version: '@version@'
    legal: "COPYRIGHT Ericsson 2023 -
 The copyright to the computer program(s) herein is the property of
 Ericsson Inc. The programs may be used and/or copied only with written
 permission from Ericsson Inc. or in accordance with the terms and
 conditions stipulated in the agreement/contract under which the
 program(s) have been supplied."

#See more details about pattern layout: https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html
#See more details about logging.pattern.level : https://docs.spring.io/spring-boot/docs/2.5.2/reference/html/features.html#features.logging.custom-log-configuration
#logging.pattern.level: "%5p [%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}][%X{userName}]"
logging:
  config: ${LOGBACK_CONFIG_FILE:classpath:logback-json.xml}
  endpoints.exclude: /actuator/health, /actuator/prometheus, /ping, /metrics, /actuator/id-(.*)
  logcontrolfile: ${LOG_CTRL_FILE:/logcontrol/logcontrol.json}

#Set the stubrunner credentials:
#stubrunner.username: <LAN SIGNUM ID>
#stubrunner.password: <LAN encripted PWD or JFrog API Key>
stubrunner:
  username: ${SELI_ARTIFACTORY_REPO_USER}
  password: ${SELI_ARTIFACTORY_REPO_PASS}

#Tracing properties
#management.tracing.propagation.consume // default: [W3C, B3, B3_MULTI]  <--- by default spring micrometer tracing will consume those protocols, it is just an indication that such configuration exists
management.tracing.propagation.produce: ${ERIC_PROPAGATOR_PRODUCE:[B3]}
otel.exporter.otlp.traces.protocol: ${OTEL_EXPORTER_OTLP_TRACES_PROTOCOL:grpc}
#spring.application.name: ${SERVICE_NAME:eric-oss-pm-stats-exporter} SERVICE_ID?

ericsson:
  tracing:
    enabled: ${ERIC_TRACING_ENABLED:true}
    exporter:
      endpoint: ${ERIC_EXPORTER_ENDPOINT:http://eric-dst-collector:4317}
      protocol: ${ERIC_EXPORTER_PROTOCOL:grpc}
    sampler:
      jaeger_remote:
        endpoint: ${ERIC_SAMPLER_JAEGER_REMOTE_ENDPOINT:http://eric-dst-collector:14250}